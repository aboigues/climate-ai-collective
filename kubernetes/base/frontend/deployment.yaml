---
# ConfigMap pour la configuration du frontend
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: climate-ai
  labels:
    app: frontend
    component: web
data:
  # URL de l'API citoyenne
  API_BASE_URL: "http://citizen-api-service.climate-ai.svc.cluster.local:8002"

---
# Deployment du frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: climate-ai
  labels:
    app: frontend
    component: web
spec:
  replicas: 2  # 2 replicas pour la haute disponibilité
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: web
    spec:
      containers:
      - name: nginx
        image: climate-ai/frontend:latest  # TODO: Remplacer par l'image dans votre registry
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: API_BASE_URL
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      # Stratégie de déploiement
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0

---
# Service du frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: climate-ai
  labels:
    app: frontend
    component: web
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: frontend

---
# Horizontal Pod Autoscaler pour le frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: climate-ai
  labels:
    app: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
